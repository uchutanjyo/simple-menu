{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/simple-sidebar-modal/src/components/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n    console.log(isModalOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        isModalOpen,\n        openModal\n      },\n      children: [\" \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(AppProvider, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/simple-sidebar-modal/src/components/context.js"],"names":["React","useState","useContext","AppContext","createContext","AppProvider","children","isModalOpen","setIsModalOpen","openModal","console","log","useGlobalContext"],"mappings":";;;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;;;AAGA,MAAMC,UAAU,gBAAGH,KAAK,CAACI,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEhC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMQ,SAAS,GAAG,MAAK;AACnBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACQE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEf,GAJG;;AAOA,sBAAM;AAAA,2BACN,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAACA,QAAAA,WAAD;AAAcE,QAAAA;AAAd,OAA5B;AAAA,sBAAwDH,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AADM,mBAAN;AAIH,CAfD;;GAAMD,W;;KAAAA,W;AAiBN,OAAO,MAAMO,gBAAgB,GAAG,MAAM;AAAA;;AACtC,SAAOV,UAAU,CAACC,UAAD,CAAjB;AACC,CAFM;;IAAMS,gB;;AAIb,SAAQT,UAAR,EAAoBE,WAApB","sourcesContent":["\nimport React, {useState, useContext} from 'react'\n\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n\n    const [isModalOpen, setIsModalOpen] = useState(false)\n\n    const openModal = ()=> {\n        setIsModalOpen(true); \n                console.log(isModalOpen)\n\n}\n    \n\n    return<>\n    <AppContext.Provider value={{isModalOpen, openModal}}> {children}\n    </AppContext.Provider>\n    </>\n}\n\nexport const useGlobalContext = () => {\nreturn useContext(AppContext)\n}\n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}