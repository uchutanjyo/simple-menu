{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/simple-slider/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = 'https://random-data-api.com/api/users/random_user?size=6 ';\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [value, setValue] = useState(0);\n\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch(url);\n      const newUsers = await response.json();\n      setUsers(newUsers);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    setInterval(() => {\n      if (value) setValue(value + 1);\n    }, 2000);\n  }, [value]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  } // increments or decrements depending on which button clicked\n\n\n  const incOrDec = type => {\n    if (type == 'inc' && value <= users.length - 2) {\n      setValue(value + 1);\n    } else if (type == 'inc' && value > users.length - 2) {\n      setValue(0);\n    }\n\n    if (type == 'dec' && value > 0) {\n      setValue(value - 1);\n    } else if (type == 'dec' && value == 0) {\n      setValue(5);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"  \", /*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"ugly basic slider project - fetches 6 random users from API, displays them in slide, controlled with left/right arrows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"this continues my attempts to make barebones versions of projects from John Smilga's React Tutorial with little to no help/reference. for this one, i managed to do it with zero help!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [users[value].first_name, users[value].last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => incOrDec('dec'),\n      children: \" left \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => incOrDec('inc'),\n      children: \" right \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-users\",\n      children: [\"here all all the users to choose from this time (but you can't click these names):\", users.map((user, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [user.first_name, \"     \", user.last_name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"YXLKWqQivV6AbqmciJJUNdWt7og=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/simple-slider/src/App.js"],"names":["React","useState","useEffect","url","App","users","setUsers","loading","setLoading","value","setValue","fetchUsers","response","fetch","newUsers","json","error","console","log","setInterval","incOrDec","type","length","first_name","last_name","map","user","index"],"mappings":"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","sourcesContent":["import React, {useState , useEffect} from 'react';\nimport './styles/App.css';\n\n\nconst url = 'https://random-data-api.com/api/users/random_user?size=6 '\n\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true)\n  const [value, setValue] = useState(0)\n\n\nconst fetchUsers = async() => {\n  try {\n    \n  const response = await fetch (url) ;\n  const newUsers = await response.json();\n  setUsers(newUsers)\nsetLoading(false)\n\n  }\n  catch (error) {\nconsole.log(error)\n  }\n}\n\nuseEffect(() => {\n  fetchUsers()\n } , []);\n\n useEffect(() => {\n   setInterval(() => {\n     if (value )\n  setValue(value + 1)\n   }, 2000)\n \n  }, [value]);\n\nif (loading)  {\nreturn (<div>\n  loading..\n</div>) }\n\n// increments or decrements depending on which button clicked\nconst  incOrDec = (type) =>{\nif ((type == 'inc') && (value <= (users.length-2))) {\n  setValue(value + 1)\n}\nelse if ((type == 'inc') && (value  > (users.length-2))){\nsetValue(0) }\n\nif ((type == 'dec') && (value > 0)) {\n  setValue(value - 1)\n}\nelse if ((type == 'dec') && (value == 0)) {\n  setValue(5)\n}\n}\n\nreturn (\n    <>  <header>\n    ugly basic slider project - fetches 6 random users from API, displays them in slide, controlled with left/right arrows\n  </header>\n<br></br>\n  <div>this continues my attempts to make barebones versions of projects from John Smilga's React Tutorial with little to no help/reference. for this one, i managed to do it with zero help!! </div>\n\n<div className=\"container\">\n\n<div>{users[value].first_name}{users[value].last_name}</div>\n  </div>\n  <button className='button' onClick={()=>(incOrDec('dec'))}> left </button>\n<button className='button' onClick={()=>(incOrDec('inc'))}> right </button>\n\n <div className=\"all-users\">here all all the users to choose from this time (but you can't click these names):\n {users.map((user, index)=> {\n  \n return <div> \n    {user.first_name}     {user.last_name} </div>})}</div>\n\n\n</>\n)}\n  \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}